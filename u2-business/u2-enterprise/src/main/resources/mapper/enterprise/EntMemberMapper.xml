<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.u2.business.enterprise.dao.EntMemberMapper">

    <resultMap type="EntMember" id="EntMemberResult">
        <result property="memberId" column="member_id"/>
        <result property="memberName" column="member_name"/>
        <result property="password" column="password"/>
        <result property="avatar" column="avatar"/>
        <result property="email" column="email"/>
        <result property="nickName" column="nick_name"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="sex" column="sex"/>
        <result property="level" column="level"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="remark" column="remark"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectMemberVo">
        select member_id,
               member_name,
               password,
               avatar,
               email,
               nick_name,
               phone_number,
               sex,
               level,
               status,
               del_flag,
               remark,
               create_by,
               create_time,
               update_by,
               update_time
        from ent_member
    </sql>

    <select id="selectMemberList" parameterType="EntMember" resultMap="EntMemberResult">
        <include refid="selectMemberVo"/>
        where del_flag = '0'
        <if test="memberName != null  and memberName != ''">and name like concat('%', #{name}, '%')</if>
        <if test="status != null ">and status = #{status}</if>
    </select>

    <select id="selectMemberById" parameterType="Long" resultMap="EntMemberResult">
        <include refid="selectMemberVo"/>
        where id = #{id} and del_flag = '0'
    </select>

    <select id="selectMemberByMemberName" parameterType="String" resultMap="EntMemberResult">
        <include refid="selectMemberVo"/>
        where member_name = #{memberName} and del_flag = '0'
    </select>

    <select id="checkMemberNameUnique" parameterType="String" resultMap="EntMemberResult">
        select member_id, member_name
        from ent_member
        where member_name = #{memberName}
          and del_flag = '0'
        limit 1
    </select>

    <select id="checkPhoneUnique" parameterType="String" resultMap="EntMemberResult">
        select member_id, phone_number
        from ent_member
        where phone_number = #{phoneNumber}
          and del_flag = '0'
        limit 1
    </select>

    <select id="checkEmailUnique" parameterType="String" resultMap="EntMemberResult">
        select member_id, email
        from ent_member
        where email = #{email}
          and del_flag = '0'
        limit 1
    </select>

    <insert id="insertMember" parameterType="EntMember" useGeneratedKeys="true" keyProperty="memberId">
        insert into ent_member(
        <if test="memberId != null and memberId != ''">member_id,</if>
        <if test="memberName != null and memberName != ''">member_name,</if>
        <if test="password != null and password != ''">password,</if>
        <if test="avatar != null and avatar != ''">avatar,</if>
        <if test="email != null">email,</if>
        <if test="nickName != null">nick_name,</if>
        <if test="phoneNumber != null">phone_number,</if>
        <if test="sex != null">sex,</if>
        <if test="level != null">level,</if>
        <if test="status != null">status,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createBy != null">create_by,</if>
       create_time
        )value (
        <if test="memberId != null and memberId != ''">#{memberId},</if>
        <if test="memberName != null and memberName != ''">#{memberName},</if>
        <if test="password != null and password != ''">#{password},</if>
        <if test="avatar != null and avatar != ''">#{avatar},</if>
        <if test="email != null">#{email},</if>
        <if test="nickName != null">#{nickName},</if>
        <if test="phoneNumber != null">#{phoneNumber},</if>
        <if test="sex != null">#{sex},</if>
        <if test="level != null">#{level},</if>
        <if test="status != null">#{status},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createBy != null">#{createBy},</if>
        sysdate()
        )
    </insert>

    <update id="updateMember" parameterType="EntMember">
        update ent_member
        <set>
            <if test="memberName != null and memberName != ''">member_name = #{memberName},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="email != null">email = #{email},</if>
            <if test="nickName != null">nick_name = #{nickName},</if>
            <if test="phoneNumber != null">phone_number = #{phoneNumber},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="level != null">level = #{level},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where member_id = #{memberId}
    </update>

    <update id="updateMemberAvatar" parameterType="EntMember">
        update ent_member
        set avatar = #{avatar}
        where member_name = #{userName}
    </update>

    <update id="resetMemberPwd" parameterType="EntMember">
        update ent_member
        set password = #{password}
        where member_name = #{userName}
    </update>

    <delete id="deleteMemberById" parameterType="Long">
        delete
        from ent_member
        where member_id = #{memberId}
    </delete>

    <delete id="deleteMemberByIds" parameterType="String">
        delete from ent_member where member_id in
        <foreach item="memberId" collection="array" open="(" separator="," close=")">
            #{memberId}
        </foreach>
    </delete>
</mapper>